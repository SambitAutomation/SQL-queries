CREATE TABLE EmployeeDetails ( EmpId int(5), FullName varchar(20), ManagerId int(5), DateOfJoining date, City varchar(10) );

INSERT INTO EmployeeDetails values ( 121, 'John Snow', 321, '2019-01-31', 'Toronto' );
INSERT INTO EmployeeDetails values ( 321, 'Walter White', 986, '2020-01-30', 'California' );
INSERT INTO EmployeeDetails values ( 421, 'Kuldeep Rana', 876, '2021-11-27', '	New Delhi' );

SELECT * FROM EmployeeDetails;

CREATE TABLE EmployeeSalary ( EmpId int(5), PROJECT varchar(2), Salary int(5), Variable int(5) );

INSERT INTO EmployeeSalary values ( 121, 'P1', 8000, 500 );
INSERT INTO EmployeeSalary values ( 321, 'P2', 10000, 1000 );
INSERT INTO EmployeeSalary values ( 421, 'P1', 12000, 0 );

SELECT * FROM EmployeeSalary;

Questions :-


1.Write an SQL query to fetch the EmpId and FullName of all the employees working under the Manager with id – ‘986’.

Ans : SELECT  EmpId, FullName FROM EmployeeDetails WHERE ManagerId = 986;

2.Write an SQL query to fetch the different projects available from the EmployeeSalary table.

Ans : SELECT DISTINCT(Project) FROM EmployeeSalary;

3.Write an SQL query to fetch the count of employees working in project ‘P1’.

Ans : SELECT COUNT(*)  FROM EmployeeSalary  WHERE Project = 'P1';

4.Write an SQL query to find the maximum, minimum, and average salary of the employees.

Ans : SELECT Max(Salary),  Min(Salary), AVG(Salary)  FROM EmployeeSalary;

5.Write an SQL query to find the employee id whose salary lies in the range of 9000 and 15000.

Ans : SELECT EmpId, Salary FROM EmployeeSalary WHERE Salary BETWEEN 9000 AND 15000;

6.Write an SQL query to fetch those employees who live in Toronto and work under the manager with ManagerId – 321.

Ans : SELECT EmpId, City, ManagerId FROM EmployeeDetails WHERE City='Toronto' AND ManagerId='321';

7.Write an SQL query to fetch all the employees who either live in California or work under a manager with ManagerId – 321.

Ans : SELECT EmpId, City, ManagerId FROM EmployeeDetails WHERE City='California' OR ManagerId='321';

8.Write an SQL query to fetch all those employees who work on Projects other than P1.

Ans : SELECT EmpId FROM EmployeeSalary WHERE NOT Project='P1';

OR  - >    SELECT EmpId FROM EmployeeSalary WHERE Project <> 'P1';

9.Write an SQL query to display the total salary of each employee adding the Salary with Variable value.

Ans : SELECT EmpId, Salary+Variable as TotalSalary  FROM EmployeeSalary;

10.Write an SQL query to fetch the employees whose name begins with any two characters, followed by a text “hn” and ends with any sequence of characters.

Ans : SELECT FullName FROM EmployeeDetails WHERE FullName LIKE ‘__hn%’;

11.Write an SQL query to fetch all the EmpIds which are present in either of the tables – ‘EmployeeDetails’ and ‘EmployeeSalary’.

Ans : SELECT EmpId FROM EmployeeDetails UNION  SELECT EmpId FROM EmployeeSalary;

12.Write an SQL query to fetch common records between two tables.

Ans : SELECT * FROM EmployeeSalary WHERE EmpId IN  (SELECT EmpId from ManagerSalary);

13.Write an SQL query to fetch records that are present in one table but not in another table.

Ans : SELECT EmployeeSalary.* FROM EmployeeSalary LEFT JOIN ManagerSalary USING (EmpId) WHERE ManagerSalary.EmpId IS NULL;

14.Write an SQL query to fetch the EmpIds that are present in both the tables –   ‘EmployeeDetails’ and ‘EmployeeSalary.

Ans : SELECT EmpId FROM  EmployeeDetails  where EmpId IN  (SELECT EmpId FROM EmployeeSalary);

15.Write an SQL query to fetch the EmpIds that are present in EmployeeDetails but not in EmployeeSalary.

Ans : SELECT EmpId FROM  EmployeeDetails  where EmpId Not IN  (SELECT EmpId FROM EmployeeSalary);

16.Write an SQL query to fetch the employee’s full names and replace the space with ‘-’.

Ans : SELECT REPLACE(FullName, ' ', '-')  FROM EmployeeDetails;

17.Write an SQL query to fetch the position of a given character(s) in a field.

Ans : SELECT INSTR(FullName, 'Snow') FROM EmployeeDetails;

18.Write an SQL query to display both the EmpId and ManagerId together.

Ans : SELECT CONCAT(EmpId, ManagerId) as NewId FROM EmployeeDetails;

19.Write a query to fetch only the first name(string before space) from the FullName column of the EmployeeDetails table.

Ans : SELECT SUBSTRING(FullName, 1, CHARINDEX(' ',FullName))  FROM EmployeeDetails;

20.Write an SQL query to uppercase the name of the employee and lowercase the city values.

Ans : SELECT UPPER(FullName), LOWER(City)  FROM EmployeeDetails;

21.Write an SQL query to find the count of the total occurrences of a particular character – ‘n’ in the FullName field.

Ans : SELECT FullName,  LENGTH(FullName) - LENGTH(REPLACE(FullName, 'n', '')) FROM EmployeeDetails;

22.Write an SQL query to update the employee names by removing leading and trailing spaces. 

Ans : UPDATE EmployeeDetails  SET FullName = LTRIM(RTRIM(FullName));

23.Fetch all the employees who are not working on any project.

Ans : SELECT EmpId FROM EmployeeSalary  WHERE Project IS NULL;

24.Write an SQL query to fetch employee names having a salary greater than or equal to 5000 and less than or equal to 10000.

Ans : SELECT FullName  FROM EmployeeDetails  WHERE EmpId IN  (SELECT EmpId FROM EmployeeSalary  WHERE Salary BETWEEN 5000 AND 10000);

25.Write an SQL query to fetch all the Employee details from the EmployeeDetails table who joined in the Year 2020.

Ans : SELECT * FROM EmployeeDetails  WHERE YEAR(DateOfJoining) = '2020';

26.Write an SQL query to fetch all employee records from the EmployeeDetails table who have a salary record in the EmployeeSalary table.

Ans : SELECT * FROM EmployeeDetails  WHERE EXISTS (SELECT * FROM EmployeeSalary S  WHERE  E.EmpId = S.EmpId);

27.Write an SQL query to fetch the project-wise count of employees sorted by project’s count in descending order.

Ans : SELECT Project, count(EmpId) EmpProjectCount FROM EmployeeSalary GROUP BY Project ORDER BY EmpProjectCount DESC;

28.Write a query to fetch employee names and salary records. Display the employee details even if the salary record is not present for the employee.

Ans : SELECT E.FullName, S.Salary  FROM EmployeeDetails E  LEFT JOIN  EmployeeSalary S ON E.EmpId = S.EmpId;
